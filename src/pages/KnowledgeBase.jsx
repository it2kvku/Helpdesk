import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const KnowledgeBase = () => {
  const navigate = useNavigate();
  const [searchQuery, setSearchQuery] = useState('');
  
  // D·ªØ li·ªáu m·∫´u cho c∆° s·ªü ki·∫øn th·ª©c
  const categories = [
    {
      id: 'network',
      name: 'K·∫øt n·ªëi m·∫°ng',
      icon: 'üåê',
      articles: [
        { id: 'wifi', title: 'Kh·∫Øc ph·ª•c v·∫•n ƒë·ªÅ k·∫øt n·ªëi WiFi', views: 1254 },
        { id: 'vpn', title: 'C√†i ƒë·∫∑t v√† s·ª≠ d·ª•ng VPN c√¥ng ty', views: 876 },
        { id: 'ethernet', title: 'Thi·∫øt l·∫≠p k·∫øt n·ªëi Ethernet', views: 542 }
      ]
    },
    {
      id: 'password',
      name: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u',
      icon: 'üîë',
      articles: [
        { id: 'password-reset', title: 'ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u t√†i kho·∫£n c√¥ng ty', views: 2145 },
        { id: 'password-policy', title: 'Ch√≠nh s√°ch m·∫≠t kh·∫©u', views: 987 }
      ]
    },
    {
      id: 'software',
      name: 'C√†i ƒë·∫∑t ph·∫ßn m·ªÅm',
      icon: 'üíø',
      articles: [
        { id: 'software-request', title: 'Y√™u c·∫ßu c√†i ƒë·∫∑t ph·∫ßn m·ªÅm m·ªõi', views: 764 },
        { id: 'software-update', title: 'C·∫≠p nh·∫≠t ph·∫ßn m·ªÅm b·∫Øt bu·ªôc', views: 1023 },
        { id: 'software-license', title: 'Qu·∫£n l√Ω gi·∫•y ph√©p ph·∫ßn m·ªÅm', views: 489 }
      ]
    },
    {
      id: 'hardware',
      name: 'X·ª≠ l√Ω s·ª± c·ªë ph·∫ßn c·ª©ng',
      icon: 'üñ•Ô∏è',
      articles: [
        { id: 'printer', title: 'Thi·∫øt l·∫≠p v√† x·ª≠ l√Ω s·ª± c·ªë m√°y in', views: 1432 },
        { id: 'monitor', title: 'Kh·∫Øc ph·ª•c v·∫•n ƒë·ªÅ hi·ªÉn th·ªã m√†n h√¨nh', views: 678 },
        { id: 'keyboard', title: 'S·ª≠a l·ªói b√†n ph√≠m v√† chu·ªôt', views: 543 }
      ]
    }
  ];

  // L·ªçc b√†i vi·∫øt d·ª±a tr√™n t√¨m ki·∫øm
  const filteredCategories = searchQuery 
    ? categories.map(category => ({
        ...category,
        articles: category.articles.filter(article => 
          article.title.toLowerCase().includes(searchQuery.toLowerCase())
        )
      })).filter(category => category.articles.length > 0)
    : categories;

  return (
    <div className="page-container">
      <header className="page-header">
        <div className="container">
          <div className="header-content">
            <h1>Ki·∫øn th·ª©c c∆° b·∫£n</h1>
            <div className="header-actions">
              <button onClick={() => navigate('/dashboard')} className="btn btn-outline">
                <span className="btn-icon">‚Üê</span> Quay l·∫°i Dashboard
              </button>
            </div>
          </div>
        </div>
      </header>
      
      <main className="page-main">
        <div className="container">
          <div className="kb-search-container">
            <div className="search-box">
              <input
                type="text"
                placeholder="T√¨m ki·∫øm gi·∫£i ph√°p..."
                value={searchQuery}
                onChange={(e) => setSearchQuery(e.target.value)}
                className="search-input"
              />
              <button className="btn btn-primary search-btn">
                <span>üîç</span>
              </button>
            </div>
            
            <div className="popular-searches">
              <span>T√¨m ki·∫øm ph·ªï bi·∫øn:</span>
              <button className="tag-pill" onClick={() => setSearchQuery('wifi')}>WiFi</button>
              <button className="tag-pill" onClick={() => setSearchQuery('m·∫≠t kh·∫©u')}>M·∫≠t kh·∫©u</button>
              <button className="tag-pill" onClick={() => setSearchQuery('m√°y in')}>M√°y in</button>
              <button className="tag-pill" onClick={() => setSearchQuery('email')}>Email</button>
            </div>
          </div>
          
          <div className="kb-categories">
            {filteredCategories.map(category => (
              <div key={category.id} className="kb-category">
                <div className="category-header">
                  <span className="category-icon">{category.icon}</span>
                  <h3>{category.name}</h3>
                </div>
                
                <ul className="kb-article-list">
                  {category.articles.map(article => (
                    <li key={article.id} className="kb-article-item">
                      <a href={`#/kb/${category.id}/${article.id}`} className="article-link">
                        <span className="article-title">{article.title}</span>
                        <span className="article-views">{article.views} l∆∞·ª£t xem</span>
                      </a>
                    </li>
                  ))}
                </ul>
                
                <div className="category-footer">
                  <a href={`#/kb/${category.id}`} className="view-all-link">
                    Xem t·∫•t c·∫£ {category.articles.length} b√†i vi·∫øt
                  </a>
                </div>
              </div>
            ))}
          </div>
          
          {filteredCategories.length === 0 && (
            <div className="no-results">
              <p>Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o ph√π h·ª£p v·ªõi "{searchQuery}"</p>
              <button className="btn btn-outline" onClick={() => setSearchQuery('')}>
                X√≥a t√¨m ki·∫øm
              </button>
            </div>
          )}
          
          <div className="kb-request-container">
            <div className="kb-request-card">
              <h3>Kh√¥ng t√¨m th·∫•y ƒëi·ªÅu b·∫°n c·∫ßn?</h3>
              <p>N·∫øu b·∫°n kh√¥ng th·ªÉ t√¨m th·∫•y gi·∫£i ph√°p cho v·∫•n ƒë·ªÅ c·ªßa m√¨nh, h√£y t·∫°o phi·∫øu h·ªó tr·ª£ m·ªõi.</p>
              <button className="btn btn-primary" onClick={() => navigate('/create-ticket')}>
                T·∫°o phi·∫øu h·ªó tr·ª£
              </button>
            </div>
          </div>
        </div>
      </main>
    </div>
  );
};

export default KnowledgeBase;
